@page "/fetchdata"
@inject HttpClient Http

<h1>Listings</h1>

@if (listings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <input list="listings" id="listing" name="listing" placeholder="Search address.." @bind="CurrentValue" @bind:event="oninput"/>
    <datalist id="listings">
        @if (listings.Any())
        {
            @foreach (var item in listings)
            {
                <option value="@item.StreetAddress, @item.Municipality, @item.County" />
            }
        }
    </datalist>
}

@code {
    private ViewData[] listings;
    private string _val;
    private string CurrentValue { get { return _val; } set { _val = value; FilterListings(); } }

    protected override async Task OnInitializedAsync()
    {
        listings = await Http.GetFromJsonAsync<ViewData[]>("https://localhost:44315/api/listings");
    }

    private async Task FilterListings()
    {
        if(CurrentValue.Any())
            listings = await Http.GetFromJsonAsync<ViewData[]>("https://localhost:44315/api/listings/" + CurrentValue);
    }

    public class ViewData
    {
        public int BooliId { get; set; }
        public string StreetAddress { get; set; }
        public string Municipality { get; set; }
        public string County { get; set; }
    }
}